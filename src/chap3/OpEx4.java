package chap3;
/*
 * 이항연산자 : 비트 연산자 : & | ^ ~
 *    & : AND : 두개의 비트가 모두 1인경우 1, 그외 0
 *    | : OR  : 두개의 비트가 모두 0인경우 0, 그외 1, 둘중 하나가 1인 경우 결과는 1
 *    ^ : XOR : 배타적OR, 두개의 비트가 다른 경우 1 
 *    ~ : Not : 0 -> 1, 1->0  변경
 */
public class OpEx4 {
	public static void main(String[] args) {
		System.out.println(6&3); //2
		/*
		 * 6 : 00000110
		 * 3 : 00000011
		 * ------------
		 * & : 00000010   : 2
		 */
		System.out.println(6|3); //7
		/*
		 * 6 : 00000110
		 * 3 : 00000011
		 * ------------
		 * | : 00000111  : 7
		 */
		System.out.println(6^3); //5
		/*
		 * 6 : 00000110
		 * 3 : 00000011
		 * ------------
		 * ^ : 00000101  : 5
		 */
		System.out.println(~10); //-11
		/*
		 *  10 : 00001010
		 *  -------------
		 *  ~  : 11110101  : ? 의 2의 보수 표현
		 *  
		 *  ?      : 1110101 
		 *  1의보수  : 0001010
		 *           +     1
		 *  2의보수  : 0001011 => 1110101은 11의 보수표현            
		 */
	}
}
